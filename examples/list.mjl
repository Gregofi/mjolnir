import { putchar, println, assert, readln } from "std/internal/native";

enum Option[T] {
    Some(T),
    None,
}

enum List[T] {
    Cons(T, List[T]),
    Nil,
}

fn find[T](lst: List[T], n: T): Bool = match lst {
    Cons(head, tail) if head == n => true,
    Cons(head, tail) => find(tail, n),
    Nil => false,
}

fn head[T](lst: List[T]): Option[T] = match lst {
    Cons(head, _) => Some(head),
    Nil => None(),
}

fn println(lst: List[Char]): Unit = match lst {
    Cons(head, tail) => {
        putchar(head);
        println(tail)
    },
    Nil => {
        putchar('\n')
    }
}

fn main(): Int = {
    let lst = Cons(0, Cons(1, Cons(2, Cons(3, Nil()))));
    assert(find(lst, 2));
    assert(find(lst, 5) == false);
    assert(match head(lst) {
        Some(x) if x == 0 => true,
        _ => false,
    });
    let y = readln();
    println(y);
    0
}
